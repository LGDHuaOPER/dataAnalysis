function dataCompareRenderChart(t){var e,r={chart:{type:t.chart.type},credits:{enabled:!1},title:{text:t.title.text},subtitle:{text:t.subtitle.text},xAxis:t.xAxis,yAxis:t.yAxis};return"histogram"==t.chartClassify?e=Highcharts.chart(t.container,_.merge({},r,{tooltip:{headerFormat:'<span style="font-size:10px">{point.key}</span><table>',pointFormat:'<tr><td style="color:{series.color};padding:0">{series.name}: </td><td style="padding:0"><b>{point.y:.1f} %</b></td></tr>',footerFormat:"</table>",shared:!0,useHTML:!0},plotOptions:{column:{groupPadding:.1,pointPadding:0}},series:t.series})):"boxlinediagram"==t.chartClassify?e=Highcharts.chart(t.container,_.merge({},r,{legend:{enabled:!0},tooltip:{pointFormat:'<span style="color:{point.color}">●</span> <b> {series.name}</b><br/>最大值: {point.high}<br/>Q2\t: {point.q3}<br/>中位数: {point.median}<br/>Q1\t: {point.q1}<br/>最小值: {point.low}<br/>'},series:t.series})):"CPK"==t.chartClassify?e=Highcharts.chart(t.container,_.merge({},r,{tooltip:{headerFormat:"<b>{point.key}</b><br>",pointFormat:"{point.x}, {point.y}"},plotOptions:{line:{dataLabels:{enabled:!0},enableMouseTracking:!0}},series:t.series})):"correlationgraph"==t.chartClassify?e=Highcharts.chart(t.container,_.merge({},r,{chart:{zoomType:"xy"},legend:{layout:"horizontal",align:"center",verticalAlign:"bottom",floating:!1,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF",borderWidth:0},plotOptions:{scatter:{marker:{radius:5,states:{hover:{enabled:!0,lineColor:"rgb(100,100,100)"}}},states:{hover:{marker:{enabled:!1}}},tooltip:{headerFormat:"<b>{series.name}</b><br>",pointFormat:"{point.x}, {point.y}"}}},series:t.series})):"gaussiandistribution"==t.chartClassify?e=Highcharts.chart(t.container,_.merge({},r,{chart:{zoomType:"xy",type:"line"},tooltip:{shared:!0},legend:{layout:"vertical",align:"left",x:55,verticalAlign:"top",y:25,floating:!0,backgroundColor:Highcharts.theme&&Highcharts.theme.legendBackgroundColor||"#FFFFFF"},series:t.series})):"good_rate"==t.chartClassify&&(e=Highcharts.chart(t.container,_.merge({},r,{tooltip:{headerFormat:"<b>{point.key}</b><br>",pointFormat:"{point.x}, {point.y}%"},series:t.series}))),_.isFunction(t.callback)&&t.callback(e),e}